{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\art23\\\\Desktop\\\\react\\\\first\\\\src\\\\components\\\\common\\\\paginator\\\\Paginator.js\";\nimport styles from './Paginator.module.css';\nimport React, { useState } from 'react';\nexport const Paginator = ({\n  totalUsersCount,\n  pageSize,\n  currentPage,\n  onPageChanged\n}) => {\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n  let pages = [];\n  const [minPage, setMinPage] = useState(0);\n  const [maxPage, setMaxPage] = useState(minPage + 8);\n  const [clickbleMin, setClickbleMin] = useState(true);\n  const [clickbleMax, setClickbleMax] = useState(false);\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let visiblePages = pages.slice(minPage, maxPage);\n\n  let prevPages = () => {\n    setMinPage(prevState => prevState - 1);\n    setMaxPage(prevState => prevState - 1);\n\n    if (minPage === 1) {\n      setClickbleMin(true);\n    } else setClickbleMin(false);\n\n    setClickbleMax(false);\n  };\n\n  let nextPages = () => {\n    setMinPage(prevState => prevState + 1);\n    setMaxPage(prevState => prevState + 1);\n\n    if (maxPage === pages.length - 1) {\n      setClickbleMax(true);\n    } else setClickbleMax(false);\n\n    setClickbleMin(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.pageBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: prevPages,\n    disabled: clickbleMin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"prev\"), visiblePages.map((p, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    className: currentPage === p ? styles.selectedPage : undefined,\n    onClick: () => onPageChanged(p),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 41\n    }\n  }, p)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextPages,\n    disabled: clickbleMax,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"next\"));\n};","map":{"version":3,"sources":["C:/Users/art23/Desktop/react/first/src/components/common/paginator/Paginator.js"],"names":["styles","React","useState","Paginator","totalUsersCount","pageSize","currentPage","onPageChanged","pagesCount","Math","ceil","pages","minPage","setMinPage","maxPage","setMaxPage","clickbleMin","setClickbleMin","clickbleMax","setClickbleMax","i","push","visiblePages","slice","prevPages","prevState","nextPages","length","pageBlock","map","p","index","selectedPage","undefined"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA;AAAzC,CAAD,KAA6D;AAClF,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,eAAe,GAAGC,QAA5B,CAAjB;AACA,MAAIM,KAAK,GAAG,EAAZ;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAACU,OAAO,GAAC,CAAT,CAAtC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;;AACA,OAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIZ,UAArB,EAAiCY,CAAC,EAAlC,EAAsC;AAClCT,IAAAA,KAAK,CAACU,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAAGX,KAAK,CAACY,KAAN,CAAYX,OAAZ,EAAqBE,OAArB,CAAnB;;AAEA,MAAIU,SAAS,GAAG,MAAM;AAClBX,IAAAA,UAAU,CAACY,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAV;AACAV,IAAAA,UAAU,CAACU,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAV;;AACA,QAAIb,OAAO,KAAK,CAAhB,EAAmB;AACfK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAEOA,cAAc,CAAC,KAAD,CAAd;;AACPE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAPD;;AAQA,MAAIO,SAAS,GAAG,MAAM;AAClBb,IAAAA,UAAU,CAACY,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAV;AACAV,IAAAA,UAAU,CAACU,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAV;;AACA,QAAIX,OAAO,KAAKH,KAAK,CAACgB,MAAN,GAAe,CAA/B,EAAkC;AAC9BR,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAEOA,cAAc,CAAC,KAAD,CAAd;;AACPF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAPD;;AAQA,sBAAO;AAAK,IAAA,SAAS,EAAEjB,MAAM,CAAC4B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAQ,IAAA,OAAO,EAAEJ,SAAjB;AAA4B,IAAA,QAAQ,EAAER,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAEFM,YAAY,CAACO,GAAb,CAAiB,CAACC,CAAD,EAAIC,KAAJ,kBAAc;AAAM,IAAA,GAAG,EAAEA,KAAX;AACM,IAAA,SAAS,EAAEzB,WAAW,KAAKwB,CAAhB,GAAoB9B,MAAM,CAACgC,YAA3B,GAA0CC,SAD3D;AAEM,IAAA,OAAO,EAAE,MAAM1B,aAAa,CAACuB,CAAD,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEwCA,CAFxC,CAA/B,CAFE,eAKH;AAAQ,IAAA,OAAO,EAAEJ,SAAjB;AAA4B,IAAA,QAAQ,EAAER,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALG,CAAP;AAOH,CAnCM","sourcesContent":["import styles from './Paginator.module.css'\r\nimport React, {useState} from 'react'\r\n\r\nexport const Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages = []\r\n    const [minPage, setMinPage] = useState(0)\r\n    const [maxPage, setMaxPage] = useState(minPage+8)\r\n    const [clickbleMin, setClickbleMin] = useState(true)\r\n    const [clickbleMax, setClickbleMax] = useState(false)\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let visiblePages = pages.slice(minPage, maxPage)\r\n\r\n    let prevPages = () => {\r\n        setMinPage(prevState => prevState - 1)\r\n        setMaxPage(prevState => prevState - 1)\r\n        if (minPage === 1) {\r\n            setClickbleMin(true)\r\n        } else setClickbleMin(false)\r\n        setClickbleMax(false)\r\n    }\r\n    let nextPages = () => {\r\n        setMinPage(prevState => prevState + 1)\r\n        setMaxPage(prevState => prevState + 1)\r\n        if (maxPage === pages.length - 1) {\r\n            setClickbleMax(true)\r\n        } else setClickbleMax(false)\r\n        setClickbleMin(false)\r\n    }\r\n    return <div className={styles.pageBlock}>\r\n        <button onClick={prevPages} disabled={clickbleMin}>prev</button>\r\n        {visiblePages.map((p, index) => <span key={index}\r\n                                              className={currentPage === p ? styles.selectedPage : undefined}\r\n                                              onClick={() => onPageChanged(p)}>{p}</span>)}\r\n        <button onClick={nextPages} disabled={clickbleMax}>next</button>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}