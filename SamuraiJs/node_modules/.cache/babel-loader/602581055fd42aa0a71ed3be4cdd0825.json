{"ast":null,"code":"const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nlet SET_USERS = \"SET_USERS\";\nlet SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 20,\n  currentPage: 1\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    default:\n      return initialState;\n  }\n};\n\nexport default usersReducer;\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPageAC = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});","map":{"version":3,"sources":["C:/Users/art23/Desktop/react/first/src/redux/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","initialState","users","pageSize","totalUsersCount","currentPage","usersReducer","state","action","type","map","u","id","userId","followed","followAC","unfollowAC","setUsersAC","setCurrentPageAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,IAAIC,SAAS,GAAG,WAAhB;AACA,IAAIC,gBAAgB,GAAG,kBAAvB;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,QAAQ,EAAE,CAFK;AAGfC,EAAAA,eAAe,EAAE,EAHF;AAIfC,EAAAA,WAAW,EAAE;AAJE,CAAnB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,MAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYQ,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKb,QAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYQ,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKZ,SAAL;AACI,aAAO,EAAC,GAAGQ,KAAJ;AAAWL,QAAAA,KAAK,EAAEM,MAAM,CAACN;AAAzB,OAAP;;AACJ,SAAKF,gBAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWF,QAAAA,WAAW,EAAEG,MAAM,CAACH;AAA/B,OAAP;;AACJ;AACI,aAAOJ,YAAP;AA1BR;AA4BH,CA7BD;;AA8BA,eAAeK,YAAf;AACA,OAAO,MAAMS,QAAQ,GAAIF,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAEZ,MAAP;AAAegB,EAAAA;AAAf,CAAb,CAAjB;AACP,OAAO,MAAMG,UAAU,GAAIH,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAEX,QAAP;AAAiBe,EAAAA;AAAjB,CAAb,CAAnB;AACP,OAAO,MAAMI,UAAU,GAAIf,KAAD,KAAY;AAACO,EAAAA,IAAI,EAAEV,SAAP;AAAkBG,EAAAA;AAAlB,CAAZ,CAAnB;AACP,OAAO,MAAMgB,gBAAgB,GAAIb,WAAD,KAAgB;AAACI,EAAAA,IAAI,EAACT,gBAAN;AAAuBK,EAAAA;AAAvB,CAAhB,CAAzB","sourcesContent":["const FOLLOW = \"FOLLOW\"\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nlet SET_USERS = \"SET_USERS\"\r\nlet SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 20,\r\n    currentPage: 1\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        default:\r\n            return initialState\r\n    }\r\n}\r\nexport default usersReducer\r\nexport const followAC = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPageAC = (currentPage)=>({type:SET_CURRENT_PAGE,currentPage})\r\n"]},"metadata":{},"sourceType":"module"}