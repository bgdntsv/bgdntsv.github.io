{"ast":null,"code":"const SEND_MESSAGE = 'SEND-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nlet initialStore = {\n  dialogs: [{\n    name: 'Igor',\n    id: '1',\n    img: 'https://i.pinimg.com/236x/74/05/5f/74055f83bfbdc20fdc1f9d1fc116fd26.jpg'\n  }, {\n    name: 'Alexandr',\n    id: '2',\n    img: 'https://i.pinimg.com/originals/9c/77/46/9c7746225873e02d83b9315501b8dd2f.jpg'\n  }, {\n    name: 'Sasha',\n    id: '3',\n    img: 'https://shapka-youtube.ru/wp-content/uploads/2020/07/letter-s-1.jpg'\n  }, {\n    name: 'Pasha',\n    id: '4',\n    img: 'https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg'\n  }, {\n    name: 'Yana',\n    id: '5',\n    img: 'https://i.pinimg.com/236x/7c/ab/18/7cab184c5e791921ed607e23458492b6.jpg'\n  }],\n  messages: [{\n    message: 'Hello',\n    id: '1'\n  }, {\n    message: 'How are you?',\n    id: '2'\n  }, {\n    message: 'You are shit!',\n    id: '3'\n  }],\n  newMessageText: ''\n};\n\nconst dialogsReducer = (state = initialStore, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      {\n        debugger;\n        let stateCopy = { ...state\n        };\n        let newMessage = {\n          id: 5,\n          message: state.newMessageText\n        };\n        stateCopy.messages = { ...state.messages\n        };\n        stateCopy.messages.push(newMessage);\n        stateCopy.newMessageText = '';\n        return stateCopy;\n      }\n\n    case UPDATE_NEW_MESSAGE_TEXT:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.newMessageText = action.newText;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const sendMessageActionCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageTextActionCreator = text => ({\n  type: UPDATE_NEW_MESSAGE_TEXT,\n  newText: text\n});\nexport default dialogsReducer;","map":{"version":3,"sources":["C:/Users/art23/Desktop/react/first/src/redux/dialogsReducer.js"],"names":["SEND_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialStore","dialogs","name","id","img","messages","message","newMessageText","dialogsReducer","state","action","type","stateCopy","newMessage","push","newText","sendMessageActionCreator","updateNewMessageTextActionCreator","text"],"mappings":"AAAA,MAAMA,YAAY,GAAG,cAArB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,EAAE,EAAE,GAAnB;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GADK,EAEL;AAACF,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,EAAE,EAAE,GAAvB;AAA4BC,IAAAA,GAAG,EAAE;AAAjC,GAFK,EAGL;AAACF,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,EAAE,EAAE,GAApB;AAAyBC,IAAAA,GAAG,EAAE;AAA9B,GAHK,EAIL;AAACF,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,EAAE,EAAE,GAApB;AAAyBC,IAAAA,GAAG,EAAE;AAA9B,GAJK,EAKL;AAACF,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,EAAE,EAAE,GAAnB;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GALK,CADM;AAQfC,EAAAA,QAAQ,EAAE,CACN;AAACC,IAAAA,OAAO,EAAE,OAAV;AAAmBH,IAAAA,EAAE,EAAE;AAAvB,GADM,EAEN;AAACG,IAAAA,OAAO,EAAE,cAAV;AAA0BH,IAAAA,EAAE,EAAE;AAA9B,GAFM,EAGN;AAACG,IAAAA,OAAO,EAAE,eAAV;AAA2BH,IAAAA,EAAE,EAAE;AAA/B,GAHM,CARK;AAafI,EAAAA,cAAc,EAAE;AAbD,CAAnB;;AAeA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,YAAL;AAAmB;AACf;AACA,YAAIc,SAAS,GAAG,EAAC,GAAGH;AAAJ,SAAhB;AACA,YAAII,UAAU,GAAG;AACbV,UAAAA,EAAE,EAAE,CADS;AAEbG,UAAAA,OAAO,EAAEG,KAAK,CAACF;AAFF,SAAjB;AAIAK,QAAAA,SAAS,CAACP,QAAV,GAAqB,EAAC,GAAGI,KAAK,CAACJ;AAAV,SAArB;AACAO,QAAAA,SAAS,CAACP,QAAV,CAAmBS,IAAnB,CAAwBD,UAAxB;AACAD,QAAAA,SAAS,CAACL,cAAV,GAA2B,EAA3B;AACA,eAAOK,SAAP;AACH;;AACD,SAAKb,uBAAL;AAA8B;AAC1B,YAAIa,SAAS,GAAG,EAAC,GAAGH;AAAJ,SAAhB;AACAG,QAAAA,SAAS,CAACL,cAAV,GAA2BG,MAAM,CAACK,OAAlC;AACA,eAAOH,SAAP;AACH;;AACD;AACI,aAAOH,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,OAAO,MAAMO,wBAAwB,GAAG,OAAO;AAAEL,EAAAA,IAAI,EAAGb;AAAT,CAAP,CAAjC;AACP,OAAO,MAAMmB,iCAAiC,GAAIC,IAAD,KAAW;AAAEP,EAAAA,IAAI,EAAEZ,uBAAR;AAAiCgB,EAAAA,OAAO,EAAEG;AAA1C,CAAX,CAA1C;AAEP,eAAeV,cAAf","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nlet initialStore = {\r\n    dialogs: [\r\n        {name: 'Igor', id: '1', img: 'https://i.pinimg.com/236x/74/05/5f/74055f83bfbdc20fdc1f9d1fc116fd26.jpg'},\r\n        {name: 'Alexandr', id: '2', img: 'https://i.pinimg.com/originals/9c/77/46/9c7746225873e02d83b9315501b8dd2f.jpg'},\r\n        {name: 'Sasha', id: '3', img: 'https://shapka-youtube.ru/wp-content/uploads/2020/07/letter-s-1.jpg'},\r\n        {name: 'Pasha', id: '4', img: 'https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg'},\r\n        {name: 'Yana', id: '5', img: 'https://i.pinimg.com/236x/7c/ab/18/7cab184c5e791921ed607e23458492b6.jpg'}\r\n    ],\r\n    messages: [\r\n        {message: 'Hello', id: '1'},\r\n        {message: 'How are you?', id: '2'},\r\n        {message: 'You are shit!', id: '3'}\r\n    ],\r\n    newMessageText: ''\r\n}\r\nconst dialogsReducer = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            debugger\r\n            let stateCopy = {...state};\r\n            let newMessage = {\r\n                id: 5,\r\n                message: state.newMessageText\r\n            }\r\n            stateCopy.messages = {...state.messages}\r\n            stateCopy.messages.push(newMessage)\r\n            stateCopy.newMessageText = ''\r\n            return stateCopy;\r\n        }\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            let stateCopy = {...state};\r\n            stateCopy.newMessageText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreator = () => ({ type : SEND_MESSAGE })\r\nexport const updateNewMessageTextActionCreator = (text) => ({ type: UPDATE_NEW_MESSAGE_TEXT, newText: text})\r\n\r\nexport default dialogsReducer;\r\n"]},"metadata":{},"sourceType":"module"}