{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\art23\\\\Desktop\\\\react\\\\first\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import styles from'./Paginator.module.css';import React,{useState}from'react';var Paginator=function Paginator(_ref){var totalUsersCount=_ref.totalUsersCount,pageSize=_ref.pageSize,currentPage=_ref.currentPage,onPageChanged=_ref.onPageChanged;var pagesCount=Math.ceil(totalUsersCount/pageSize);var pages=[];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),minPage=_useState2[0],setMinPage=_useState2[1];var _useState3=useState(minPage+8),_useState4=_slicedToArray(_useState3,2),maxPage=_useState4[0],setMaxPage=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),clickbleMin=_useState6[0],setClickbleMin=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),clickbleMax=_useState8[0],setClickbleMax=_useState8[1];for(var i=1;i<=pagesCount;i++){pages.push(i);}var visiblePages=pages.slice(minPage,maxPage);var prevPages=function prevPages(){setMinPage(function(prevState){return prevState-1;});setMaxPage(function(prevState){return prevState-1;});if(minPage===1){setClickbleMin(true);}else setClickbleMin(false);setClickbleMax(false);};var nextPages=function nextPages(){setMinPage(function(prevState){return prevState+1;});setMaxPage(function(prevState){return prevState+1;});if(maxPage===pages.length-1){setClickbleMax(true);}else setClickbleMax(false);setClickbleMin(false);};return/*#__PURE__*/React.createElement(\"div\",{className:styles.pageBlock},/*#__PURE__*/React.createElement(\"button\",{onClick:prevPages,disabled:clickbleMin},\"\\u2190\"),visiblePages.map(function(p,index){return/*#__PURE__*/React.createElement(\"span\",{key:index,className:currentPage===p?styles.selectedPage:undefined,onClick:function onClick(){return onPageChanged(p);}},p);}),/*#__PURE__*/React.createElement(\"button\",{onClick:nextPages,disabled:clickbleMax},\"\\u2192\"));};var PaginatorMemo=React.memo(Paginator);export default PaginatorMemo;","map":{"version":3,"sources":["C:/Users/art23/Desktop/react/first/src/components/common/paginator/Paginator.js"],"names":["styles","React","useState","Paginator","totalUsersCount","pageSize","currentPage","onPageChanged","pagesCount","Math","ceil","pages","minPage","setMinPage","maxPage","setMaxPage","clickbleMin","setClickbleMin","clickbleMax","setClickbleMax","i","push","visiblePages","slice","prevPages","prevState","nextPages","length","pageBlock","map","p","index","selectedPage","undefined","PaginatorMemo","memo"],"mappings":"mKAAA,MAAOA,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA6D,IAA3DC,CAAAA,eAA2D,MAA3DA,eAA2D,CAA1CC,QAA0C,MAA1CA,QAA0C,CAAhCC,WAAgC,MAAhCA,WAAgC,CAAnBC,aAAmB,MAAnBA,aAAmB,CAC3E,GAAIC,CAAAA,UAAU,CAAGC,IAAI,CAACC,IAAL,CAAUN,eAAe,CAAGC,QAA5B,CAAjB,CACA,GAAIM,CAAAA,KAAK,CAAG,EAAZ,CAF2E,cAG7CT,QAAQ,CAAC,CAAD,CAHqC,wCAGpEU,OAHoE,eAG3DC,UAH2D,8BAI7CX,QAAQ,CAACU,OAAO,CAAC,CAAT,CAJqC,yCAIpEE,OAJoE,eAI3DC,UAJ2D,8BAKrCb,QAAQ,CAAC,IAAD,CAL6B,yCAKpEc,WALoE,eAKvDC,cALuD,8BAMrCf,QAAQ,CAAC,KAAD,CAN6B,yCAMpEgB,WANoE,eAMvDC,cANuD,eAO3E,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIZ,UAArB,CAAiCY,CAAC,EAAlC,CAAsC,CAClCT,KAAK,CAACU,IAAN,CAAWD,CAAX,EACH,CACD,GAAIE,CAAAA,YAAY,CAAGX,KAAK,CAACY,KAAN,CAAYX,OAAZ,CAAqBE,OAArB,CAAnB,CACA,GAAIU,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAClBX,UAAU,CAAC,SAAAY,SAAS,QAAIA,CAAAA,SAAS,CAAG,CAAhB,EAAV,CAAV,CACAV,UAAU,CAAC,SAAAU,SAAS,QAAIA,CAAAA,SAAS,CAAG,CAAhB,EAAV,CAAV,CACA,GAAIb,OAAO,GAAK,CAAhB,CAAmB,CACfK,cAAc,CAAC,IAAD,CAAd,CACH,CAFD,IAEOA,CAAAA,cAAc,CAAC,KAAD,CAAd,CACPE,cAAc,CAAC,KAAD,CAAd,CACH,CAPD,CAQA,GAAIO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAClBb,UAAU,CAAC,SAAAY,SAAS,QAAIA,CAAAA,SAAS,CAAG,CAAhB,EAAV,CAAV,CACAV,UAAU,CAAC,SAAAU,SAAS,QAAIA,CAAAA,SAAS,CAAG,CAAhB,EAAV,CAAV,CACA,GAAIX,OAAO,GAAKH,KAAK,CAACgB,MAAN,CAAe,CAA/B,CAAkC,CAC9BR,cAAc,CAAC,IAAD,CAAd,CACH,CAFD,IAEOA,CAAAA,cAAc,CAAC,KAAD,CAAd,CACPF,cAAc,CAAC,KAAD,CAAd,CACH,CAPD,CAQA,mBAAO,2BAAK,SAAS,CAAEjB,MAAM,CAAC4B,SAAvB,eACH,8BAAQ,OAAO,CAAEJ,SAAjB,CAA4B,QAAQ,CAAER,WAAtC,WADG,CAEFM,YAAY,CAACO,GAAb,CAAiB,SAACC,CAAD,CAAIC,KAAJ,qBAAc,4BAAM,GAAG,CAAEA,KAAX,CACM,SAAS,CAAEzB,WAAW,GAAKwB,CAAhB,CAAoB9B,MAAM,CAACgC,YAA3B,CAA0CC,SAD3D,CAEM,OAAO,CAAE,yBAAM1B,CAAAA,aAAa,CAACuB,CAAD,CAAnB,EAFf,EAEwCA,CAFxC,CAAd,EAAjB,CAFE,cAKH,8BAAQ,OAAO,CAAEJ,SAAjB,CAA4B,QAAQ,CAAER,WAAtC,WALG,CAAP,CAOH,CAlCD,CAmCA,GAAIgB,CAAAA,aAAa,CAAGjC,KAAK,CAACkC,IAAN,CAAWhC,SAAX,CAApB,CACA,cAAe+B,CAAAA,aAAf","sourcesContent":["import styles from './Paginator.module.css'\r\nimport React, {useState} from 'react'\r\n\r\nconst Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages = []\r\n    const [minPage, setMinPage] = useState(0)\r\n    const [maxPage, setMaxPage] = useState(minPage+8)\r\n    const [clickbleMin, setClickbleMin] = useState(true)\r\n    const [clickbleMax, setClickbleMax] = useState(false)\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let visiblePages = pages.slice(minPage, maxPage)\r\n    let prevPages = () => {\r\n        setMinPage(prevState => prevState - 1)\r\n        setMaxPage(prevState => prevState - 1)\r\n        if (minPage === 1) {\r\n            setClickbleMin(true)\r\n        } else setClickbleMin(false)\r\n        setClickbleMax(false)\r\n    }\r\n    let nextPages = () => {\r\n        setMinPage(prevState => prevState + 1)\r\n        setMaxPage(prevState => prevState + 1)\r\n        if (maxPage === pages.length - 1) {\r\n            setClickbleMax(true)\r\n        } else setClickbleMax(false)\r\n        setClickbleMin(false)\r\n    }\r\n    return <div className={styles.pageBlock}>\r\n        <button onClick={prevPages} disabled={clickbleMin}>&larr;</button>\r\n        {visiblePages.map((p, index) => <span key={index}\r\n                                              className={currentPage === p ? styles.selectedPage : undefined}\r\n                                              onClick={() => onPageChanged(p)}>{p}</span>)}\r\n        <button onClick={nextPages} disabled={clickbleMax}>&rarr;</button>\r\n    </div>\r\n}\r\nlet PaginatorMemo = React.memo(Paginator)\r\nexport default PaginatorMemo"]},"metadata":{},"sourceType":"module"}