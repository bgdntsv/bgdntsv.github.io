{"ast":null,"code":"import { authMe } from \"./authReducer\";\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIALIZED:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst initializedSuccess = () => ({\n  type: SET_INITIALIZED\n});\n\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(authMe());\n  promise.then(() => dispatch(initializedSuccess()));\n};","map":{"version":3,"sources":["C:/Users/art23/Desktop/react/first/src/redux/appReducer.js"],"names":["authMe","SET_INITIALIZED","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","then"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,eAArB;AAEA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAGA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,eAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAWA,MAAMG,kBAAkB,GAAG,OAAO;AAACD,EAAAA,IAAI,EAAEN;AAAP,CAAP,CAA3B;;AAEA,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7C,MAAIC,OAAO,GAAGD,QAAQ,CAACV,MAAM,EAAP,CAAtB;AACAW,EAAAA,OAAO,CAACC,IAAR,CAAa,MAAMF,QAAQ,CAACF,kBAAkB,EAAnB,CAA3B;AACH,CAHM","sourcesContent":["import {authMe} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\"\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst initializedSuccess = () => ({type: SET_INITIALIZED})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authMe())\r\n    promise.then(() => dispatch(initializedSuccess()))\r\n}"]},"metadata":{},"sourceType":"module"}