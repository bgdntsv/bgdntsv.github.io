{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\art23\\\\Desktop\\\\react\\\\first\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setUsersAC, setUsersTotalCountAC, toggleFetchingAC, unfollowAC } from \"../../redux/usersReducer\";\nimport React from \"react\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport preloader from \"./../../assets/images/preloader.svg\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => this.props.setUsers(response.data.items));\n      this.props.toggleIsFetching(false);\n    };\n\n    this.render = () => {\n      debugger;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(\"img\", {\n        src: preloader,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 38\n        }\n      }) : null, /*#__PURE__*/React.createElement(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        users: this.props.users,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow,\n        onPageChanged: this.onPageChanged,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => dispatch(followAC(userId)),\n    unfollow: userId => dispatch(unfollowAC(userId)),\n    setUsers: users => dispatch(setUsersAC(users)),\n    setCurrentPage: pageNumber => dispatch(setCurrentPageAC(pageNumber)),\n    setTotalUsersCount: totalCount => dispatch(setUsersTotalCountAC(totalCount)),\n    toggleIsFetching: isFetching => dispatch(toggleFetchingAC(isFetching))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["C:/Users/art23/Desktop/react/first/src/components/Users/UsersContainer.jsx"],"names":["connect","followAC","setCurrentPageAC","setUsersAC","setUsersTotalCountAC","toggleFetchingAC","unfollowAC","React","axios","Users","UsersContainer","Component","onPageChanged","pageNumber","props","toggleIsFetching","setCurrentPage","get","pageSize","then","response","setUsers","data","items","render","isFetching","preloader","totalUsersCount","currentPage","users","unfollow","follow","componentDidMount","setTotalUsersCount","totalCount","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\r\nimport {\r\n    followAC,\r\n    setCurrentPageAC,\r\n    setUsersAC,\r\n    setUsersTotalCountAC,\r\n    toggleFetchingAC,\r\n    unfollowAC\r\n} from \"../../redux/usersReducer\";\r\nimport React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport preloader from \"./../../assets/images/preloader.svg\"\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUsersCount(response.data.totalCount)\r\n            })\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toggleIsFetching(true)\r\n        this.props.setCurrentPage(pageNumber)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => this.props.setUsers(response.data.items))\r\n        this.props.toggleIsFetching(false)\r\n    }\r\n\r\n    render = () => {\r\n        debugger\r\n        return <>\r\n            {this.props.isFetching ? <img src={preloader} alt=\"\"/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   onPageChanged={this.onPageChanged}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) =>\r\n            dispatch(followAC(userId)),\r\n        unfollow: (userId) =>\r\n            dispatch(unfollowAC(userId)),\r\n        setUsers: (users) =>\r\n            dispatch(setUsersAC(users)),\r\n        setCurrentPage:(pageNumber)=>\r\n            dispatch(setCurrentPageAC(pageNumber)),\r\n        setTotalUsersCount:(totalCount)=>\r\n            dispatch(setUsersTotalCountAC(totalCount)),\r\n        toggleIsFetching:(isFetching)=>\r\n            dispatch(toggleFetchingAC(isFetching))\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)"]},"metadata":{},"sourceType":"module"}