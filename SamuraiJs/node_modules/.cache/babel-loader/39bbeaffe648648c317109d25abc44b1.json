{"ast":null,"code":"import React from\"react\";import s from\"./Dialog.module.css\";import DialogItem from\"./DialogItem/DialogItem\";import Message from\"./Message/Message\";import{Redirect}from\"react-router\";import{Field,reduxForm}from\"redux-form\";import{maxLengthCreator,required}from\"../../validator\";import{Textarea}from\"../common/FormControl/FormsControl\";var Dialog=function Dialog(props){var dialogElements=props.dialogsPage.dialogs.map(function(dialog){return/*#__PURE__*/React.createElement(DialogItem,{name:dialog.name,id:dialog.id,key:dialog.id,img:dialog.img});});var dialogMessages=props.dialogsPage.messages.map(function(message){return/*#__PURE__*/React.createElement(Message,{message:message.message,key:message.id});});var AddMessage=function AddMessage(values){props.addMessage(values.newMessageBody);};if(!props.isAuth){return/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"});}return/*#__PURE__*/React.createElement(\"div\",{className:s.dialogs},/*#__PURE__*/React.createElement(\"div\",{className:s.dialogsItems},dialogElements),/*#__PURE__*/React.createElement(\"div\",{className:s.messages},dialogMessages,/*#__PURE__*/React.createElement(AddMessageFormRedux,{onSubmit:AddMessage})));};var maxLength50=maxLengthCreator(50);var AddMessageForm=function AddMessageForm(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(Field,{placeholder:\"Enter message\",component:Textarea,validate:[required,maxLength50],name:\"newMessageBody\"}),/*#__PURE__*/React.createElement(\"button\",null,\"Post\")));};var AddMessageFormRedux=reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm);export default Dialog;","map":{"version":3,"sources":["C:/Users/art23/Desktop/react/first/src/components/Dialogs/Dialog.jsx"],"names":["React","s","DialogItem","Message","Redirect","Field","reduxForm","maxLengthCreator","required","Textarea","Dialog","props","dialogElements","dialogsPage","dialogs","map","dialog","name","id","img","dialogMessages","messages","message","AddMessage","values","addMessage","newMessageBody","isAuth","dialogsItems","maxLength50","AddMessageForm","handleSubmit","AddMessageFormRedux","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,qBAAd,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAAQC,QAAR,KAAuB,cAAvB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,YAA/B,CACA,OAAQC,gBAAR,CAA0BC,QAA1B,KAAyC,iBAAzC,CACA,OAAQC,QAAR,KAAuB,oCAAvB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,CACtB,GAAIC,CAAAA,cAAc,CAAGD,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8B,SAAAC,MAAM,qBACrD,oBAAC,UAAD,EAAY,IAAI,CAAEA,MAAM,CAACC,IAAzB,CAA+B,EAAE,CAAED,MAAM,CAACE,EAA1C,CAA8C,GAAG,CAAEF,MAAM,CAACE,EAA1D,CAA8D,GAAG,CAAEF,MAAM,CAACG,GAA1E,EADqD,EAApC,CAArB,CAEA,GAAIC,CAAAA,cAAc,CAAGT,KAAK,CAACE,WAAN,CAAkBQ,QAAlB,CAA2BN,GAA3B,CAA+B,SAAAO,OAAO,qBACvD,oBAAC,OAAD,EAAS,OAAO,CAAEA,OAAO,CAACA,OAA1B,CAAmC,GAAG,CAAEA,OAAO,CAACJ,EAAhD,EADuD,EAAtC,CAArB,CAEA,GAAIK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAAY,CACzBb,KAAK,CAACc,UAAN,CAAiBD,MAAM,CAACE,cAAxB,EACH,CAFD,CAGA,GAAI,CAACf,KAAK,CAACgB,MAAX,CAAmB,CACf,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,QAAd,EAAP,CACH,CACD,mBACI,2BAAK,SAAS,CAAE1B,CAAC,CAACa,OAAlB,eACI,2BAAK,SAAS,CAAEb,CAAC,CAAC2B,YAAlB,EACKhB,cADL,CADJ,cAII,2BAAK,SAAS,CAAEX,CAAC,CAACoB,QAAlB,EACKD,cADL,cAEI,oBAAC,mBAAD,EAAqB,QAAQ,CAAEG,UAA/B,EAFJ,CAJJ,CADJ,CAWH,CAtBD,CAuBA,GAAIM,CAAAA,WAAW,CAAGtB,gBAAgB,CAAC,EAAD,CAAlC,CACA,GAAMuB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACnB,KAAD,CAAW,CAC9B,mBAAO,qDACH,4BAAM,QAAQ,CAAEA,KAAK,CAACoB,YAAtB,eACI,oBAAC,KAAD,EAAO,WAAW,CAAC,eAAnB,CAAmC,SAAS,CAAEtB,QAA9C,CAAwD,QAAQ,CAAE,CAACD,QAAD,CAAWqB,WAAX,CAAlE,CAA2F,IAAI,CAAC,gBAAhG,EADJ,cAEI,yCAFJ,CADG,CAAP,CAMH,CAPD,CAQA,GAAMG,CAAAA,mBAAmB,CAAG1B,SAAS,CAAC,CAAC2B,IAAI,CAAE,sBAAP,CAAD,CAAT,CAA0CH,cAA1C,CAA5B,CACA,cAAepB,CAAAA,MAAf","sourcesContent":["import React from \"react\";\r\nimport s from \"./Dialog.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../validator\";\r\nimport {Textarea} from \"../common/FormControl/FormsControl\";\r\n\r\nconst Dialog = (props) => {\r\n    let dialogElements = props.dialogsPage.dialogs.map(dialog =>\r\n        <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} img={dialog.img}/>);\r\n    let dialogMessages = props.dialogsPage.messages.map(message =>\r\n        <Message message={message.message} key={message.id}/>)\r\n    let AddMessage = (values) => {\r\n        props.addMessage(values.newMessageBody)\r\n    }\r\n    if (!props.isAuth) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {dialogMessages}\r\n                <AddMessageFormRedux onSubmit={AddMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nlet maxLength50 = maxLengthCreator(50)\r\nconst AddMessageForm = (props) => {\r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder=\"Enter message\" component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\"/>\r\n            <button>Post</button>\r\n        </form>\r\n    </>\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\nexport default Dialog\r\n"]},"metadata":{},"sourceType":"module"}