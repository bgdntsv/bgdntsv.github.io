{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\art23\\\\Desktop\\\\react\\\\first\\\\src\\\\components\\\\common\\\\paginator\\\\Paginator.js\";\nimport styles from './Paginator.module.css';\nimport React, { useState } from 'react';\nexport const Paginator = ({\n  totalUsersCount,\n  pageSize,\n  currentPage,\n  onPageChanged\n}) => {\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n  let pages = [];\n  const [minPage, setMinPage] = useState(0);\n  const [maxPage, setMaxPage] = useState(7);\n  const [clickbleMin, setClickbleMin] = useState(true);\n  const [clickbleMax, setClickbleMax] = useState(false);\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let visiblePages = pages;\n\n  if (visiblePages.length > 8) {\n    visiblePages.slice(minPage, maxPage);\n  }\n\n  let prevPages = () => {\n    setMinPage(prevState => prevState - 1);\n    setMaxPage(prevState => prevState - 1);\n\n    if (minPage === 0) {\n      setClickbleMin(false);\n    } else setClickbleMin(true);\n  };\n\n  let nextPages = () => {\n    setMinPage(prevState => prevState + 1);\n    setMaxPage(prevState => prevState + 1);\n\n    if (maxPage === pages.length - 1) {\n      setClickbleMax(false);\n    } else setClickbleMax(true);\n  };\n\n  debugger;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.pageBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: prevPages,\n    disabled: clickbleMin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"prev\"), visiblePages.map(p => /*#__PURE__*/React.createElement(\"span\", {\n    className: currentPage === p && styles.selectedPage,\n    onClick: () => onPageChanged(p),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }\n  }, p)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextPages,\n    disabled: clickbleMax,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"next\"));\n};","map":{"version":3,"sources":["C:/Users/art23/Desktop/react/first/src/components/common/paginator/Paginator.js"],"names":["styles","React","useState","Paginator","totalUsersCount","pageSize","currentPage","onPageChanged","pagesCount","Math","ceil","pages","minPage","setMinPage","maxPage","setMaxPage","clickbleMin","setClickbleMin","clickbleMax","setClickbleMax","i","push","visiblePages","length","slice","prevPages","prevState","nextPages","pageBlock","map","p","selectedPage"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA;AAAzC,CAAD,KAA6D;AAClF,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,eAAe,GAAGC,QAA5B,CAAjB;AACA,MAAIM,KAAK,GAAG,EAAZ;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;;AACA,OAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIZ,UAArB,EAAiCY,CAAC,EAAlC,EAAsC;AAClCT,IAAAA,KAAK,CAACU,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAAGX,KAAnB;;AACA,MAAIW,YAAY,CAACC,MAAb,GAAsB,CAA1B,EAA6B;AACzBD,IAAAA,YAAY,CAACE,KAAb,CAAmBZ,OAAnB,EAA4BE,OAA5B;AACH;;AACD,MAAIW,SAAS,GAAG,MAAM;AAClBZ,IAAAA,UAAU,CAACa,SAAS,IAAIA,SAAS,GAAC,CAAxB,CAAV;AACAX,IAAAA,UAAU,CAACW,SAAS,IAAIA,SAAS,GAAC,CAAxB,CAAV;;AACA,QAAGd,OAAO,KAAG,CAAb,EAAe;AACXK,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KAFD,MAGKA,cAAc,CAAC,IAAD,CAAd;AACR,GAPD;;AAQA,MAAIU,SAAS,GAAG,MAAK;AACjBd,IAAAA,UAAU,CAACa,SAAS,IAAIA,SAAS,GAAC,CAAxB,CAAV;AACAX,IAAAA,UAAU,CAACW,SAAS,IAAIA,SAAS,GAAC,CAAxB,CAAV;;AACA,QAAGZ,OAAO,KAAGH,KAAK,CAACY,MAAN,GAAa,CAA1B,EAA4B;AACxBJ,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KAFD,MAGKA,cAAc,CAAC,IAAD,CAAd;AACR,GAPD;;AAQA;AACA,sBAAO;AAAK,IAAA,SAAS,EAAEnB,MAAM,CAAC4B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAQ,IAAA,OAAO,EAAEH,SAAjB;AAA4B,IAAA,QAAQ,EAAET,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAEFM,YAAY,CAACO,GAAb,CAAiBC,CAAC,iBAAI;AAAM,IAAA,SAAS,EAAExB,WAAW,KAAKwB,CAAhB,IAAqB9B,MAAM,CAAC+B,YAA7C;AACD,IAAA,OAAO,EAAE,MAAMxB,aAAa,CAACuB,CAAD,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACiCA,CADjC,CAAtB,CAFE,eAIH;AAAQ,IAAA,OAAO,EAAEH,SAAjB;AAA4B,IAAA,QAAQ,EAAET,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG,CAAP;AAMH,CArCM","sourcesContent":["import styles from './Paginator.module.css'\r\nimport React, {useState} from 'react'\r\n\r\nexport const Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages = []\r\n    const [minPage, setMinPage] = useState(0)\r\n    const [maxPage, setMaxPage] = useState(7)\r\n    const [clickbleMin, setClickbleMin] = useState(true)\r\n    const [clickbleMax, setClickbleMax] = useState(false)\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let visiblePages = pages\r\n    if (visiblePages.length > 8) {\r\n        visiblePages.slice(minPage, maxPage)\r\n    }\r\n    let prevPages = () => {\r\n        setMinPage(prevState => prevState-1)\r\n        setMaxPage(prevState => prevState-1)\r\n        if(minPage===0){\r\n            setClickbleMin(false)\r\n        }\r\n        else setClickbleMin(true)\r\n    }\r\n    let nextPages = () =>{\r\n        setMinPage(prevState => prevState+1)\r\n        setMaxPage(prevState => prevState+1)\r\n        if(maxPage===pages.length-1){\r\n            setClickbleMax(false)\r\n        }\r\n        else setClickbleMax(true)\r\n    }\r\n    debugger\r\n    return <div className={styles.pageBlock}>\r\n        <button onClick={prevPages} disabled={clickbleMin}>prev</button>\r\n        {visiblePages.map(p => <span className={currentPage === p && styles.selectedPage}\r\n                              onClick={() => onPageChanged(p)}>{p}</span>)}\r\n        <button onClick={nextPages} disabled={clickbleMax}>next</button>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}