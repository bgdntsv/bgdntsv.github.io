{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\art23\\\\Desktop\\\\react\\\\first\\\\src\\\\components\\\\Dialogs\\\\DialogContainer.jsx\";\nimport { sendMessageActionCreator, updateNewMessageTextActionCreator } from \"../../redux/dialogsReducer\";\nimport Dialog from \"./Dialog\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport React from \"react\";\n\nlet mapStateToStore = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessage: () => dispatch(sendMessageActionCreator()),\n    updateNewMessageText: text => dispatch(updateNewMessageTextActionCreator(text))\n  };\n};\n\nlet AuthRedirectComponent = props => {\n  if (!this.props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 36\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }\n  }));\n};\n\nconst DialogContainer = connect(mapStateToStore, mapDispatchToProps)(Dialog);\nexport default DialogContainer;","map":{"version":3,"sources":["C:/Users/art23/Desktop/react/first/src/components/Dialogs/DialogContainer.jsx"],"names":["sendMessageActionCreator","updateNewMessageTextActionCreator","Dialog","connect","Redirect","React","mapStateToStore","state","dialogsPage","isAuth","auth","mapDispatchToProps","dispatch","addMessage","updateNewMessageText","text","AuthRedirectComponent","props","DialogContainer"],"mappings":";AAAA,SAAQA,wBAAR,EAAkCC,iCAAlC,QAA0E,4BAA1E;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAM;AACFC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADjB;AAEFC,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFjB,GAAN;AAIH,CALD;;AAMA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAM;AACFC,IAAAA,UAAU,EAAE,MAAMD,QAAQ,CAACZ,wBAAwB,EAAzB,CADxB;AAEFc,IAAAA,oBAAoB,EAAIC,IAAD,IAAUH,QAAQ,CAACX,iCAAiC,CAACc,IAAD,CAAlC;AAFvC,GAAN;AAIH,CALD;;AAOA,IAAIC,qBAAqB,GAAIC,KAAD,IAAU;AAClC,MAAG,CAAC,KAAKA,KAAL,CAAWR,MAAf,EAAuB;AAAC,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAAiC;;AACzD,sBAAO,oBAAC,MAAD,oBAAYQ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAHD;;AAKA,MAAMC,eAAe,GAAIf,OAAO,CAACG,eAAD,EAAiBK,kBAAjB,CAAP,CAA4CT,MAA5C,CAAzB;AAEA,eAAegB,eAAf","sourcesContent":["import {sendMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialog from \"./Dialog\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router\";\r\nimport React from \"react\";\r\nlet mapStateToStore = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addMessage: () => dispatch(sendMessageActionCreator()),\r\n        updateNewMessageText : (text) => dispatch(updateNewMessageTextActionCreator(text))\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = (props) =>{\r\n    if(!this.props.isAuth) {return <Redirect to={\"/login\"}/>}\r\n    return <Dialog {...props} />\r\n}\r\n\r\nconst DialogContainer  = connect(mapStateToStore,mapDispatchToProps)(Dialog)\r\n\r\nexport default DialogContainer\r\n"]},"metadata":{},"sourceType":"module"}