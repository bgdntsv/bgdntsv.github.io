{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\art23\\\\Desktop\\\\react\\\\first\\\\src\\\\components\\\\Users\\\\Paginator.js\";\nimport styles from './users.module.css';\nimport React from 'react';\nexport const Paginator = props => {\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.pageBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }\n  }, pages.map(p => /*#__PURE__*/React.createElement(\"span\", {\n    className: props.currentPage === p && styles.selectedPage,\n    onClick: () => props.onPageChanged(p),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }\n  }, p)));\n};","map":{"version":3,"sources":["C:/Users/art23/Desktop/react/first/src/components/Users/Paginator.js"],"names":["styles","React","Paginator","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","pageBlock","map","p","currentPage","selectedPage","onPageChanged"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,KAAK,CAACI,eAAN,GAAwBJ,KAAK,CAACK,QAAxC,CAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACY,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFH,KAAK,CAACI,GAAN,CAAUC,CAAC,iBAAI;AAAM,IAAA,SAAS,EAAEX,KAAK,CAACY,WAAN,KAAsBD,CAAtB,IAA2Bd,MAAM,CAACgB,YAAnD;AACM,IAAA,OAAO,EAAE,MAAMb,KAAK,CAACc,aAAN,CAAoBH,CAApB,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC8CA,CAD9C,CAAf,CADE,CAAP;AAIH,CAVM","sourcesContent":["import styles from './users.module.css'\r\nimport React from 'react'\r\n\r\nexport const Paginator = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return <div className={styles.pageBlock}>\r\n        {pages.map(p => <span className={props.currentPage === p && styles.selectedPage}\r\n                              onClick={() => props.onPageChanged(p)}>{p}</span>)}\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}